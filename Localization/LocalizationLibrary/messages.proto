option java_package = "edu.cmu.ri.rcommerce";
option java_outer_classname = "Messages";

enum Accuracy
{
	UNRELIABLE = 0;
	LOW = 1;
	MEDIUM = 2;
	HIGH = 3;
}
message GSMInfo
{
	enum ChannelType
	{
		REGULAR = 0;
		BCCH = 1;
	}
	enum	CellStatus
	{
		CELL_SUITABLE=0;
		CELL_LOW_PRIORITY=1;
		CELL_FORBIDDEN=2;
		CELL_BARRED=3;
		CELL_LOW_LEVEL=4;
		CELL_OTHER=5;
	}
	optional int32 channel = 1;
	optional sint32 signal_strength =2;
	optional ChannelType type = 3;

	optional CellStatus status =4;	
	optional int32 base_station_id =5;
	optional int32 country_code =6;
	optional int32 network_code =7;
	optional int32 location_area_code =8;
	optional int32 cellID =9;
	optional int32 psc = 10;
	
}

message WifiInfo
{
	optional fixed64 BSSID = 1;
	optional string SSID = 2;
	optional sint32 level = 3;
	optional int32 frequency = 4;
	optional int32 channel = 5;
	
}

message WifiScan
{
	optional int64 timestamp = 1;
	repeated WifiInfo scan = 2;
}

message GSMScan
{
	optional int64 timestamp = 1;
	repeated GSMInfo scan = 2;
}

message PositionInfo
{
	optional int64 timestamp =1;
	optional float x = 2;
	optional float y = 3;
	optional float z = 4;
	
	//in radians
	optional float yaw = 5;
	optional float pitch = 6;
	optional float roll = 7;
	optional Accuracy accuracy = 8;
	optional string notes = 9;
}

message AccelInfo
{
	optional int64 timestamp = 1;
	optional float x = 2;
	optional float y = 3;
	optional float z = 4;
	optional Accuracy accuracy = 5;
}

message MagneticInfo
{
	optional int64 timestamp = 1;
	optional float x = 2;
	optional float y = 3;
	optional float z = 4;
	optional Accuracy accuracy = 5;
}

message GyroInfo
{
	optional int64 timestamp = 1;
	optional float x = 2;
	optional float y = 3;
	optional float z = 4;
	optional Accuracy accuracy = 5;
}

message GravityInfo //sensor fusion result
{
	optional int64 timestamp = 1;
	optional float x = 2;
	optional float y = 3;
	optional float z = 4;
	optional Accuracy accuracy = 5;
}

message LinearAccelInfo //sensor fusion result
{
	optional int64 timestamp = 1;
	optional float x = 2;
	optional float y = 3;
	optional float z = 4;
	optional Accuracy accuracy = 5;
}

//The rotation vector represents the orientation of the device as a combination of an angle and an axis, in which the device has rotated through an angle theta around an axis <x, y, z>. The three elements of the rotation vector are <x*sin(theta/2), y*sin(theta/2), z*sin(theta/2)>, such that the magnitude of the rotation vector is equal to sin(theta/2), and the direction of the rotation vector is equal to the direction of the axis of rotation. The three elements of the rotation vector are equal to the last three components of a unit quaternion <cos(theta/2), x*sin(theta/2), y*sin(theta/2), z*sin(theta/2)>. Elements of the rotation vector are unitless. The x,y, and z axis are defined in the same way as the acceleration sensor. 
message RotationInfo //sensor fusion result in axis/angle format
{
	optional int64 timestamp = 1;
	optional float a = 2;
	optional float b = 3;
	optional float c = 4;
	optional Accuracy accuracy = 5;
}

message GPSInfo
{
	optional int64 timestamp = 1;
	optional double lattitude = 2;
	optional double longitude = 3;
	optional double bearing = 4;
	optional float speed = 5;
	optional float accuracy = 6;
}

message ProximityInfo
{
	optional int64 timestamp = 1;
	optional float proximity = 2; //in cm
}

message LightInfo
{
	optional int64 timestamp = 1;
	optional float light = 2; //in lux
}

message TagInfo
{
	optional bool tag = 1;
}

message MessageWrapper
{
   enum Type { 
	GSMScan = 1; 
	WifiScan = 2; 
	PositionInfo = 3;
	MagneticInfo = 4;
	GPSInfo = 5;
	ProximityInfo = 6;
	LightInfo = 7;
	AccelInfo = 8;
	GyroInfo = 9;
	GravityInfo = 11;
	LinearAccelInfo = 12;
	RotationInfo = 13;
	TagInfo = 14;
	}

  // Identifies which field is filled in.
  required Type type = 1;

  // One of the following will be filled in.
  optional GSMScan gsmScan = 2;
  optional WifiScan wifiScan = 3;
  optional PositionInfo positionInfo = 4;
  optional MagneticInfo magneticInfo = 5;
  optional GPSInfo gpsInfo = 6;
  optional ProximityInfo proximityInfo = 7;
  optional LightInfo lightInfo = 8;
  optional AccelInfo accelInfo = 9;
  optional GyroInfo gyroInfo = 10;
  optional GravityInfo gravityInfo = 11;
  optional LinearAccelInfo linearAccelInfo = 12;
  optional RotationInfo rotationInfo = 13;
  optional TagInfo tagInfo = 14;
}

